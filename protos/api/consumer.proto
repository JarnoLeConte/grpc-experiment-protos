syntax = "proto3";

package api.consumer;


/* Consumer Object */

message Consumer {
  uint32 id = 1;
  string name = 2;
  Type type = 3;

  enum Type {
    PERSON = 0;
    COMPANY = 1;
  }
}

/* Create */

message CreateRequest {
  Consumer consumer = 1;
}

message CreateResponse {
  oneof type {
    Result result = 1;
    Error error = 2;
  }
  message Result {
    uint32 id = 1;
  }
  enum Error {
    ERROR_ACTION_FAILED = 0;
  }
}

/* Read */

message ReadRequest {
  uint32 id = 1;
}

message ReadResponse {
  oneof type {
    Result result = 1;
    Error error = 2;
  }
  message Result {
    Consumer consumer = 1;
  }
  enum Error {
    ERROR_ACTION_FAILED = 0;
    ERROR_NOT_FOUND = 1;
  }
}

/* Update */

message UpdateRequest {
  Consumer consumer = 1;
}

message UpdateResponse {
  oneof type {
    Result result = 1;
    Error error = 2;
  }
  message Result {
    /* empty */
  }
  enum Error {
    ERROR_ACTION_FAILED = 0;
  }
}

/* Delete */

message DeleteRequest {
  uint32 id = 1;
}

message DeleteResponse {
  oneof type {
    Result result = 1;
    Error error = 2;
  }
  message Result {
    /* empty */
  }
  enum Error {
    ERROR_ACTION_FAILED = 0;
  }
}

/* List */

message ListRequest {
  /* empty */
}

message ListResponse {
  oneof type {
    Result result = 1;
    Error error = 2;
  }
  message Result {
    repeated Consumer consumers = 1;
  }
  enum Error {
    ERROR_ACTION_FAILED = 0;
  }
}


